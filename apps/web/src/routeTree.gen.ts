/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TimesheetsRouteImport } from './routes/timesheets'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as InvoicesRouteImport } from './routes/invoices'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ClientsRouteImport } from './routes/clients'
import { Route as IndexRouteImport } from './routes/index'

const TimesheetsRoute = TimesheetsRouteImport.update({
  id: '/timesheets',
  path: '/timesheets',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const InvoicesRoute = InvoicesRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientsRoute = ClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/invoices': typeof InvoicesRoute
  '/projects': typeof ProjectsRoute
  '/timesheets': typeof TimesheetsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/invoices': typeof InvoicesRoute
  '/projects': typeof ProjectsRoute
  '/timesheets': typeof TimesheetsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/clients': typeof ClientsRoute
  '/dashboard': typeof DashboardRoute
  '/invoices': typeof InvoicesRoute
  '/projects': typeof ProjectsRoute
  '/timesheets': typeof TimesheetsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clients'
    | '/dashboard'
    | '/invoices'
    | '/projects'
    | '/timesheets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clients'
    | '/dashboard'
    | '/invoices'
    | '/projects'
    | '/timesheets'
  id:
    | '__root__'
    | '/'
    | '/clients'
    | '/dashboard'
    | '/invoices'
    | '/projects'
    | '/timesheets'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClientsRoute: typeof ClientsRoute
  DashboardRoute: typeof DashboardRoute
  InvoicesRoute: typeof InvoicesRoute
  ProjectsRoute: typeof ProjectsRoute
  TimesheetsRoute: typeof TimesheetsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/timesheets': {
      id: '/timesheets'
      path: '/timesheets'
      fullPath: '/timesheets'
      preLoaderRoute: typeof TimesheetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/invoices': {
      id: '/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof InvoicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clients': {
      id: '/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClientsRoute: ClientsRoute,
  DashboardRoute: DashboardRoute,
  InvoicesRoute: InvoicesRoute,
  ProjectsRoute: ProjectsRoute,
  TimesheetsRoute: TimesheetsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
